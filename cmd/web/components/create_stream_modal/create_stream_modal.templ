package web

import stream_types "life-streams/internal/server/handlers/stream/types"

templ CreateStreamModal() {
	<dialog class="dialog">
		<div id="form-response">
			<!-- Form response will be rendered here -->
		</div>
		<h2>Create Stream</h2>
		<form hx-post="/create_stream" hx-target="#form-response" method="POST" class="form">
			<div class="group">
				<label for="title">Stream Name</label>
				<input type="text" id="title" name="title" required/>
			</div>
			<div class="group">
				<label for="description">Description</label>
				<textarea id="description" name="description" required></textarea>
			</div>
			<div class="buttons-wrapper">
				<button value="cancel" type="button" class="button cancel">Cancel</button>
				<button type="submit" class="button submit">Submit</button>
			</div>
		</form>
	</dialog>
	<button class="show-button positive">Create Stream</button>
	<script>
  (() => {
    const showButton = document.querySelector(".show-button");
    const favDialog = document.querySelector(".dialog");

    document.querySelector(".cancel").addEventListener("click", () => {
      document.querySelector(".form").reset();
      const formResponse = document.querySelector("#form-response");
      formResponse.innerHTML = "";
      favDialog.close();
    });
    showButton.addEventListener("click", () => {
      favDialog.showModal();
    });
  })()
  </script>
}

templ CreateStreamError(message string) {
	<div class="error-wrapper">
		<h3>Failed to create stream!</h3>
		<p>{ message }</p>
	</div>
}

var helloHandle = templ.NewOnceHandle()

templ CreateStreamSuccess(stream stream_types.Stream) {
	<script>
    let form = document.querySelector('.form');
    form.reset();
    let dialog = document.querySelector('.dialog');
    setTimeout(() => {
      dialog.close();
    }, 3000)
  </script>
	<div class="success-wrapper">
		<h3>Stream created successfully</h3>
	</div>
}
