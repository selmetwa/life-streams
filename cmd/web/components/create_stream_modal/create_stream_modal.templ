package web

import stream_types "life-streams/internal/server/handlers/stream/types"


templ CreateStreamModal() {
	<style>
    dialog {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: min(500px, 100%);
      background-color: var(--tile4);
      border: 1px solid var(--tile1);

      > h2 {
        margin: 0;
        color: var(--text1);
        font-size: 1.25rem;
        font-weight: bold;
      }
      > form {
        display: flex;
        flex-direction: column;
        gap: 10px;

        > .group {
          width: 100%;
          display: flex;
          flex-direction: column;
          color: var(--text1);

          > label {
            margin-bottom: 5px;
            color: var(--text1);
          }

          > textarea {
            resize: none;
            padding: 5px;
            border: 1px solid var(--tile3);
            background-color: var(--tile5);
          }
        }

        > .buttons {
          margin-top: 8px;
          width: 100%;
          display: flex;
          flex-direction: row;
          gap: 4px;

          > .button {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            flex: 1;
        }

        > .cancel {
            background-color: var(--tile2);
            color: var(--red1);
            font-weight: bold;
        }
      }
    }
  </style>
		<dialog class="dialog">
      <div id="form-response">
        <!-- Form response will be rendered here -->
      </div>
      <h2>Create Stream</h2>
			<form hx-post="/create_stream" hx-target="#form-response" method="POST" class="form">
				<div class="group">
					<label for="title">Stream Name</label>
					<input type="text" id="title" name="title" required/>
				</div>
				<div class="group">
					<label for="description">Description</label>
					<textarea id="description" name="description" required></textarea>
				</div>
				<div class="buttons">
					<button value="cancel" type="button" class="button cancel">Cancel</button>
					<button type="submit" class="button submit">Submit</button>
				</div>
			</form>
		</dialog>
		<button class="show-button">Create Stream</button>
	<script>
    const showButton = document.querySelector(".show-button");
    const favDialog = document.querySelector(".dialog");

    document.querySelector(".cancel").addEventListener("click", () => {
      document.querySelector(".form").reset();
      const formResponse = document.querySelector("#form-response");
      formResponse.innerHTML = "";
      favDialog.close();
    });
    showButton.addEventListener("click", () => {
      favDialog.showModal();
    });
  </script>
}

templ CreateStreamError(message string) {
	<style>
    .error-wrapper {
      display: flex;
      justify-content: start;
      flex-direction: column;
      width: 100%;
      padding: 12px;
      text-align: left;
      background-color: var(--red1);

      > h2 {
        font-size: 1.25rem;
        color: var(--text1);
      }

      > p {
        font-size: 1rem;
        color: var(--text1);
      }
    }
  </style>
	<div class="error-wrapper">
		<h2>Failed to create stream!</h2>
		<p>{ message }</p>
	</div>
}

var helloHandle = templ.NewOnceHandle()

templ CreateStreamSuccess(stream stream_types.Stream) {
	<style>
    .success-wrapper {
      display: flex;
      justify-content: start;
      flex-direction: column;
      width: 100%;
      padding: 12px;
      text-align: left;
      background-color: var(--green1);

      > h2 {
        font-size: 1.25rem;
        color: var(--text1);
      }
    }
  </style>
  <script>
    let form = document.querySelector('.form');
    form.reset();
    let dialog = document.querySelector('.dialog');
    setTimeout(() => {
      dialog.close();
    }, 3000)
  </script>
	<div class="success-wrapper">
		<h2>Stream created successfully</h2>
	</div>
}
