package web

import (
	stream_types "life-streams/internal/server/handlers/stream/types"
	"strconv"
)

templ CreateTaskModal(streams []stream_types.Stream, streamID string) {
	<dialog class="task-modal-dialog">
		<div id="task-modal-form-response">
			<!-- Form response will be rendered here -->
		</div>
		<h2>Create Task</h2>
		<form hx-post="/create_task" hx-target="#task-modal-form-response" method="POST" class="task-form">
			<div class="group">
				<label for="title">Task Name</label>
				<input type="text" id="title" name="title" required/>
			</div>
			<div class="group">
				<label for="description">Description</label>
				<textarea id="description" name="description" required></textarea>
			</div>
			if streamID != "" {
				<input type="hidden" name="stream" value={ streamID }/>
			} else {
				<div class="group">
					<label for="stream">Stream</label>
					<select id="stream" name="stream" required>
						<option value="" disabled selected>Select a stream</option>
						for _, stream := range streams {
							<option value={ strconv.Itoa(stream.ID) }>{ stream.Title }</option>
						}
					</select>
				</div>
			}
			<div class="buttons-wrapper">
				<button type="button" class="cancel close-create-task-modal">Cancel</button>
				<button type="submit" class="button submit">Submit</button>
			</div>
		</form>
	</dialog>
	<button class="show-task-modal-button positive">Create Task</button>
	<script>
    (() => {
      const showTaskModalButton = document.querySelector(".show-task-modal-button");
      const taskModalDialog = document.querySelector(".task-modal-dialog");

      document.querySelector('.close-create-task-modal').addEventListener('click', () => {
        document.querySelector(".task-form").reset();
        document.querySelector("#task-modal-form-response").innerHTML = "";
        taskModalDialog.close();
      })

      showTaskModalButton.addEventListener("click", () => {
        taskModalDialog.showModal();
      });
    })()
  </script>
}

templ CreateTaskError(message string) {
	<div class="error-wrapper">
		<h3>Failed to create task!</h3>
		<p>{ message }</p>
	</div>
}

var helloHandle = templ.NewOnceHandle()

templ CreateTaskSuccess() {
	<script>
    (() => {
      let form = document.querySelector('.task-form');
      form.reset();
      let dialog = document.querySelector('.task-modal-dialog');
      setTimeout(() => {
        dialog.close();
      }, 3000)
    })()
  </script>
	<div class="success-wrapper">
		<h3>Task created successfully</h3>
	</div>
}
